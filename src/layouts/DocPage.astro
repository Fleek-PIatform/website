---
import '@styles/globals.css';
import '@styles/docPage.css';
import '@styles/admonition.css';
import '@microflash/remark-callout-directives/theme/github';
import BaseHtml from '@layouts/BaseHtml.astro';
import Announcement from "@components/Announcement";
import Container from "@components/Container";
import Nav from "@components/Nav";
import Footer from "@components/Footer";
import generateSidebarDS, { generateSidebarDSByUserOrder } from '@utils/generateSidebarDS';
import { getCollection } from "astro:content";
import Sidebar from '@components/Sidebar';
import OnPageNavigation from '@components/OnPageNavigation/OnPageNavigation.astro';
import GithubEditLink from '@components/GitHubEditLink.astro';

import type { MarkdownHeading } from 'astro';

type Props = {
  title: string;
	headings: MarkdownHeading[];
};

const { title, headings } = Astro.props;
const currentPage = Astro.url.pathname;
const currentFile = `${currentPage.replace(/\/$/, '')}.md`;
let githubEditUrlPathname = currentFile.replace(/\//, '');
githubEditUrlPathname = currentPage === '/docs' ? `/docs/index.md` : githubEditUrlPathname;

const allPosts = await getCollection("docs");
const orderBy = [{
	category: 'randomx',
	order: 5,
}, {
	category: 'categoryx',
	order: 3,
}, {
	category: 'has_whitespace_and-dash',
	order: 2,
}];

const sidebarSorted = generateSidebarDSByUserOrder(allPosts, orderBy);
---

<BaseHtml title={title}>
  <main class="container min-h-container">
    <div class="grid grid-cols-[1fr,3fr,1fr] gap-4">
      <div class="px-32">
        <Sidebar
          client:load
          data={sidebarSorted}
          pathname={Astro.url.pathname}
        />
      </div>
      <div class="px-32">
        <article class="doc">
          <slot />
          <GithubEditLink pathname={githubEditUrlPathname} />
        </article>
      </div>
      <div>
        <OnPageNavigation headings={headings} githubEditUrl={githubEditUrlPathname} />
      </div>
    </div>
  </main>
</BaseHtml>
