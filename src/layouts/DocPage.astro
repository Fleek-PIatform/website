---
import '@styles/globals.css';
import '@styles/docPage.css';
import '@styles/admonition.css';
import BaseHtml from '@layouts/BaseHtml.astro';
import Announcement from '@components/Announcement';
import Container from '@components/Container';
import Nav from '@components/NavBar';
import Footer from '@components/Footer';
import { generateSidebarDSByUserOrder } from '@utils/generateSidebarDS';
import { getCollection } from 'astro:content';
import Sidebar from '@components/Sidebar';
import SearchBtn from '@components/SearchBtn';
import OnPageNavigation from '@components/OnPageNavigation/OnPageNavigation.astro';
import { getEntry } from 'astro:content';
import GithubEditLink from '@components/GitHubEditLink.astro';
import { generateGitHubEditLink } from '@utils/url';
import settings from '@base/settings.json';

import type { MarkdownHeading } from 'astro';
import type { ContentEntryMap } from 'astro:content';

type Props = {
  title: string;
  headings: MarkdownHeading[];
};

const { title, headings } = Astro.props;
const {
  collection,
  id,
}: {
  collection: keyof ContentEntryMap;
  id: string;
} = (() => {
  let entries = Astro.url.pathname.split('/').filter(Boolean);

  if (!Array.isArray(entries)) {
    throw new Error('Expected an array');
  }

  if (entries.length < 2) {
    entries.push('index');
  }

  return {
    collection: entries[0] as keyof ContentEntryMap,
    id: entries[1],
  };
})();

const data = await getEntry(collection, id);

if (!data || !data?.id || !data?.collection) {
  throw Error('Oops! Unexpected response data');
}

const githubEditUrlPathname = generateGitHubEditLink({
  collection: data.collection,
  id: data.id,
});
const allPosts = await getCollection('docs');
const orderBy = settings.docs.menu.order;

const sidebarSorted = generateSidebarDSByUserOrder(allPosts, orderBy);

const indexNameDocs = import.meta.env.PUBLIC_MEILISEARCH_INDEX_DOCS;

const isHome = Astro.url.pathname === '/docs';
---

<BaseHtml title={title}>
  <main class="container min-h-container">
    <div class={`grid grid-cols-[1fr] gap-4 ${isHome ? 'md:grid-cols-[1fr,6fr]' : 'md:grid-cols-[1fr,3fr,1fr]'}`}>
      <aside class="w-320 px-32">
        <div class="docs-search-container">
          <SearchBtn client:load indexName={indexNameDocs} />
        </div>
        <Sidebar
          client:load
          data={sidebarSorted}
          pathname={Astro.url.pathname}
        />
      </aside>
      <div class="min-w-0 px-32">
        <article class="doc">
          <slot />
          {
            !isHome && (
              <GithubEditLink pathname={githubEditUrlPathname} />
            )
          }
        </article>
      </div>
      <aside class="hidden w-240 lg:block">
        {
          !isHome
          && headings
          && (
            <OnPageNavigation
              headings={headings}
            />
          )
        }
      </aside>
    </div>
  </main>
</BaseHtml>
