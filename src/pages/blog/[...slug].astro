---
import { getCollection } from 'astro:content';
import BlogPageLayout from '../../layouts/BlogPage.astro';
import GithubEditLink from '@components/GitHubEditLink.astro';
import { generateGitHubEditLink } from '@utils/url';
import ButtonGhost from '@components/ButtonGhost';
import { formatDate } from '@utils/date';
import { generateFullSlug } from '@utils/generateFullSlug';
import settings from '@base/settings.json';

export async function getStaticPaths() {
  const docsEntries = await getCollection('blog');
  return docsEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const { collection, id, slug } = entry;

const githubEditUrlPathname = generateGitHubEditLink({
  collection,
  id,
});

const date = formatDate({ date: entry.data.date });

const fullSlug = generateFullSlug({
  basePath: settings.site.metadata.blog.slug,
  slug,
});
---

<BlogPageLayout
  title={entry.data.title}
  description={entry.data?.desc}
  image={entry.data?.image?.src}
  slug={fullSlug}
>
  <article class="blog">
    <div class="mb-24 w-fit" id="goBackButton">
      <ButtonGhost>
        <img
          src="/svg/caret-left.svg"
          class="caret border-0 !border-none !outline-none invert filter"
        />
        <span class="text-sm mb-2">Go back</span>
      </ButtonGhost>
    </div>
    <small class="font-plex-sans text-16 text-gray-dark-10">{date}</small>
    <h1>{entry.data.title}</h1>
    {
      entry.data?.image?.src && (
        <p>
          <img src={entry.data.image.src} alt={entry.data.title} />
        </p>
      )
    }
    <Content />
    <GithubEditLink pathname={githubEditUrlPathname} />
  </article>
</BlogPageLayout>

<script>
  document.getElementById('goBackButton')?.addEventListener('click', () => {
    if (history.length > 2) {
      history.back();
    } else {
      window.location.href = '/blog';
    }
  });
</script>
