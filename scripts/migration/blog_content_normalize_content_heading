#!/bin/bash

if [[ -z "$1" && ! "$2" == 'write' ]]; then
    echo "👹 Oops! Missing origin and target paths! Please do $0 <target_path>"
    exit 1
fi

# Define the target path
target_path="$1"

if [[ ! "$2" == 'write' ]]; then
  echo "🤖 Dry-run mode"
else
  echo "🤖 Blog content normalization process is in write-run mode"
  while read -rp "❓Are you sure you want to continue (yes/no)? " answer; do
    if [[ "$answer" == [nN] || "$answer" == [nN][oO] ]]; then
	  echo "🦖 Exited the blog content normalization process"
	  exit 1
    elif [[ "$answer" == [yY] || "$answer" == [yY][eE][sS] ]]; then
      echo "🙏 The blog content normalization process will now start, be patient..."
	  sleep 3
      break;
    fi
	
    echo  "💩 Uh-oh! We expect a yes or no answer. Try again...\n"
  done;
fi


if [[ ! "$2" == 'write' ]]; then
	sed_inplace_edit=()
else
	OS="$(uname)"
	if [[ "$OS" == "Darwin" ]]; then
	    sed_inplace_edit=("-i" "")
	elif [[ "$OS" == "Linux" ]]; then
	    sed_inplace_edit=("-i")
	else
		echo "👹 Oops! Unsupported operating system $OS"
	    exit 1
	fi
fi

find "$target_path" -type f \( -name "*.md" -o -name "*.mdx" \) -print0 | while IFS= read -r -d '' file; do
	echo "🤖 Processing the file $file"
	
    if ! sed "${sed_inplace_edit[@]}" '/^category:/d' "$file" | head -n 5 \
       || ! sed "${sed_inplace_edit[@]}" '/^alt:/d' "$file" | head -n 5 \
       || ! sed "${sed_inplace_edit[@]}" '/^canonical:/d' "$file" | head -n 5 \
	   || ! sed "${sed_inplace_edit[@]}" 's/^\(date: \)"\([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}\).*/\1\2/' "$file" | head -n 5; then
        echo "👹 Oops! Failed to remove some fields in $file"
    fi

	if [[ "$3" == 'write' ]]; then
	  echo "✅ Normalized $file to $target_dir/index.md"
	fi

	echo
	echo
done

echo "👍 Blog content normalization process completed."
