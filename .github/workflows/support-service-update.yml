name: ðŸŽ» Support Service Update

on:
  push:
    branches:
      - main
      # TODO: remove the "develop" branch used for testing
      - develop
    paths:
      - 'Services/ZenDesk/**'
  workflow_dispatch:

jobs:
  support-service-update-process:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Update Service
      uses: appleboy/ssh-action@v1.0.3
      env:
        SUPPORT_SERVICE_PATHNAME: ${{ secrets.SUPPORT_SERVICE_PATHNAME }}
        SUPPORT_SERVICE_SYSTEMD_NAME: ${{ secrets.SUPPORT_SERVICE_SYSTEMD_NAME }}
        GITHUB_REF_NAME: ${{ env.GITHUB_REF_NAME }}
        PRIVATE_ZENDESK_EMAIL: ${{ secrets.PRIVATE_ZENDESK_EMAIL }}
        PRIVATE_ZENDESK_API_KEY: ${{ secrets.PRIVATE_ZENDESK_API_KEY }}
        PRIVATE_ZENDESK_HOSTNAME: ${{ secrets.PRIVATE_ZENDESK_HOSTNAME }}
        PUBLIC_SUPPORT_API_HOST: ${{ env.PUBLIC_SUPPORT_API_HOST }}
        SUPPORT_ALLOW_ORIGIN_ADDR: ${{ env.SUPPORT_ALLOW_ORIGIN_ADDR }}
        SUPPORT_RATE_LIMIT_WINDOW_MINUTES: ${{ env.SUPPORT_RATE_LIMIT_WINDOW_MINUTES }}
        SUPPORT_RATE_LIMIT_MAX_REQ: ${{ env.SUPPORT_RATE_LIMIT_MAX_REQ }}
        SUPPORT_RATE_LIMIT_PATHS: ${{ env.SUPPORT_RATE_LIMIT_PATHS }}
        NODE_ENV: ${{ env.NODE_ENV }}
      with:
        host: ${{ secrets.SUPPORT_SERVICE_HOST }}
        username: ${{ secrets.SUPPORT_SERVICE_USERNAME }}
        key: ${{ secrets.SUPPORT_SERVICE_KEY }}
        port: ${{ secrets.SUPPORT_SERVICE_PORT }}
        envs: SUPPORT_SERVICE_PATHNAME,SUPPORT_SERVICE_SYSTEMD_NAME,GITHUB_REF_NAME,PRIVATE_ZENDESK_EMAIL,PRIVATE_ZENDESK_API_KEY,PRIVATE_ZENDESK_HOSTNAME,PUBLIC_SUPPORT_API_HOST,SUPPORT_ALLOW_ORIGIN_ADDR,SUPPORT_RATE_LIMIT_WINDOW_MINUTES,SUPPORT_RATE_LIMIT_MAX_REQ,SUPPORT_RATE_LIMIT_PATHS,NODE_ENV
        script: |
          # TODO: Remove "develop" as used for testing
          if [[ ! "$GITHUB_REF_NAME" =~ ^(master|main|develop)$ ]]; then
            echo "ðŸ‘¹ Oops! This script's meant to run in the main branch."
            exit 1
          fi

          # TODO: Set as "main", "develop" was used for testing
          checkout_branch="develop"

          if ! cd "$SUPPORT_SERVICE_PATHNAME"; then
            echo "ðŸ‘¹ Oops! Failed to change work directory"
            exit 1
          fi

          echo "âœ… Changed to work directory."

          if ! git fetch origin; then
            echo "ðŸ‘¹ Oops! Failed to fetch origin"
            exit 1
          fi

          if ! git checkout "$checkout_branch"; then
            echo "ðŸ‘¹ Oops! Failed to checkout branch $checkout_branch"
            exit 1
          fi

          if ! git reset --hard "origin/$checkout_branch"; then
            echo "ðŸ‘¹ Oops! Failed to reset branch"
            exit 1
          fi

          # If env var path changes
          # Update the EnvironmentFile in systemd service
          if ! ./Services/ZenDesk/scripts/add-env-vars "$HOME"; then
            echo "ðŸ‘¹ Oops! Failed to add the environment variables for some reason..."
            exit 1
          fi
          
          echo "âœ… The environment variables were processed successfully."

          commit_hash=$(git rev-parse HEAD)
          commit_msg=$(git log -1 --pretty=format:"%s")
          echo "âœ… Pulled latest ($commit_hash), $commit_msg"

          if ! sudo systemctl daemon-reload && sudo systemctl restart "$SUPPORT_SERVICE_SYSTEMD_NAME"; then
            echo "ðŸ‘¹ Oops! Failed restart the Systemd Service"
            exit 1
          fi

          echo "âœ… Restarted the service."

    - name: Health Check
      run: |
        public_health_check_endpoint="https://support-prod-eu-lon-1-01.flkservices.io/health"
        response_message=$(curl -s "$public_health_check_endpoint" | jq -r '.message')

        if [[ "$response_message" != "OK" ]]; then
          echo "ðŸ‘¹ Oops! The health check failed, expected \"OK\" and got \"$response_message\"."
          exit 1
        fi

        echo "âœ… The service is healthy!"
